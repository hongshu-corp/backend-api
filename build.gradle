buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
        commonVersion = 'v1.0.0-alpha.5'
        junitVersion = '5.3.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

static def getGitVersion() {
    String tagName = 'git describe --tags --exact-match'.execute().text.trim()
    String commitId = 'git rev-parse HEAD'.execute().text.trim().substring(0, 8)
    return tagName.isEmpty() ? commitId : tagName
}

plugins {
    id "java"
    id 'jacoco'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.genesisfin'
version = getGitVersion()
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor('org.projectlombok:lombok:1.18.2')
    runtime("org.springframework.boot:spring-boot-devtools:${springBootVersion}")

    compile('org.projectlombok:lombok:1.18.2')
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-cache:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    compile("mysql:mysql-connector-java:5.1.47")
    compile 'com.h2database:h2'
    compile("org.liquibase:liquibase-core:3.6.2")
    compile('io.jsonwebtoken:jjwt:0.9.1')
    compile 'com.squareup.retrofit2:retrofit:2.4.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.4.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile 'org.hashids:hashids:1.0.3'

    compile 'com.github.axet:kaptcha:0.0.9' // auth code

    compile 'com.fasterxml.jackson.core:jackson-core'
    compile 'com.fasterxml.jackson.core:jackson-annotations'
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    compile 'org.reflections:reflections:0.9.11'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.security:spring-security-test'
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

}

test {
    environment "SPRING_PROFILES_ACTIVE", "test"
    jacoco {
        enabled true
    }
    useJUnitPlatform()
}

task cucumber(dependsOn: testClasses) {
    doLast {
        javaexec {
            environment "SPRING_PROFILES_ACTIVE", "test"
            main = "cucumber.api.cli.Main"
            classpath = configurations.testRuntimeClasspath + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.genesisfin', 'src/test/resources/features']
        }
    }
    jacoco {
        enabled true
    }
    mustRunAfter test
}

check {
    dependsOn cucumber
}

task ci {
    dependsOn clean
    dependsOn check
    check.mustRunAfter clean
}

build {
    dependsOn clean
    mustRunAfter clean
}
